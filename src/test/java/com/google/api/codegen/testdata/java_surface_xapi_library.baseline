============== file: src/main/java/com/google/gcloud/pubsub/spi/LibraryServiceApi.java ==============
@javax.annotation.Generated("by GAPIC")
public class LibraryServiceApi implements AutoCloseable {
  private final LibraryServiceSettings settings;
  private final ManagedChannel channel;
  private final ScheduledExecutorService executor;
  private final List<AutoCloseable> closeables = new ArrayList<>();

  private final ApiCallable<CreateShelfRequest, Shelf> createShelfCallable;
  private final ApiCallable<GetShelfRequest, Shelf> getShelfCallable;
  private final ApiCallable<ListShelvesRequest, ListShelvesResponse> listShelvesCallable;
  private final ApiCallable<ListShelvesRequest, PageAccessor<Shelf>> listShelvesPagedCallable;
  private final ApiCallable<DeleteShelfRequest, Empty> deleteShelfCallable;
  private final ApiCallable<MergeShelvesRequest, Shelf> mergeShelvesCallable;
  private final ApiCallable<CreateBookRequest, Book> createBookCallable;
  private final ApiCallable<PublishSeriesRequest, PublishSeriesResponse> publishSeriesCallable;
  private final ApiCallable<GetBookRequest, Book> getBookCallable;
  private final ApiCallable<ListBooksRequest, ListBooksResponse> listBooksCallable;
  private final ApiCallable<ListBooksRequest, PageAccessor<Book>> listBooksPagedCallable;
  private final ApiCallable<DeleteBookRequest, Empty> deleteBookCallable;
  private final ApiCallable<UpdateBookRequest, Book> updateBookCallable;
  private final ApiCallable<MoveBookRequest, Book> moveBookCallable;
  private final ApiCallable<ListStringsRequest, ListStringsResponse> listStringsCallable;
  private final ApiCallable<ListStringsRequest, PageAccessor<String>> listStringsPagedCallable;
  private final ApiCallable<AddCommentsRequest, Empty> addCommentsCallable;
  private final ApiCallable<GetBookFromArchiveRequest, Book> getBookFromArchiveCallable;

  public final LibraryServiceSettings getSettings() {
    return settings;
  }

  private static final PathTemplate SHELF_PATH_TEMPLATE =
      PathTemplate.createWithoutUrlEncoding("shelves/{shelf}");

  private static final PathTemplate BOOK_PATH_TEMPLATE =
      PathTemplate.createWithoutUrlEncoding("shelves/{shelf}/books/{book}");

  private static final PathTemplate ARCHIVED_BOOK_PATH_TEMPLATE =
      PathTemplate.createWithoutUrlEncoding("archives/{archive_path=**}/books/{book}");

  /**
   * Formats a string containing the fully-qualified path to represent
   * a shelf resource.
   */
  public static final String formatShelfName(String shelf) {
    return SHELF_PATH_TEMPLATE.instantiate(
        "shelf", shelf);
  }

  /**
   * Formats a string containing the fully-qualified path to represent
   * a book resource.
   */
  public static final String formatBookName(String shelf, String book) {
    return BOOK_PATH_TEMPLATE.instantiate(
        "shelf", shelf,
        "book", book);
  }

  /**
   * Formats a string containing the fully-qualified path to represent
   * a archived_book resource.
   */
  public static final String formatArchivedBookName(String archivePath, String book) {
    return ARCHIVED_BOOK_PATH_TEMPLATE.instantiate(
        "archive_path", archivePath,
        "book", book);
  }

}
